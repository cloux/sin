#!/bin/sh
#
# Install FB Infer - tool to detect bugs in Java, C, C++ and ObjectiveC
# https://fbinfer.com
#
# (cloux@rote.ch)
#

printf 'Install infer\n\n'

# need to be root
if [ $(id -u) -ne 0 ]; then printf 'Need to be root!\n'; exit 1; fi

# check dependencies
for DEP in wget jq; do
	if ! command -v "$DEP" >/dev/null; then
		printf 'ERROR: Please install "%s" to continue.\n' "$DEP"
		exit 1
	fi
done

# check version
if [ "$(command -v infer)" ]; then
	INST_VERSION=$(infer --version 2>/dev/null | grep version | grep -o '[0-9].*')
	printf 'Installed version: %s\n' "$INST_VERSION" 
fi
printf '   Latest version: '
JSON_FILE=$(mktemp)
LATEST_STABLE_LINK="https://api.github.com/repos/facebook/infer/releases/latest"
wget -q "$LATEST_STABLE_LINK" -O "$JSON_FILE" 2>/dev/null
LATEST_VERSION=$(jq -r '.tag_name' "$JSON_FILE" | grep -o '[0-9].*')
LATEST_LINK=$(jq -r '.assets[] | .browser_download_url' "$JSON_FILE" | grep -i $(uname -s))
rm "$JSON_FILE"
if [ -z "$LATEST_VERSION" ] || [ -z "$LATEST_LINK" ]; then
	printf 'ERROR: latest version not found.\n'
	exit
fi
printf '%s\n\n' "$LATEST_VERSION"
if [ "$INST_VERSION" ] && [ "$LATEST_VERSION" = "$INST_VERSION" ]; then
	printf 'Up to date, nothing to do.\n'
	exit
fi

# download
TMPDIR=$(mktemp -d)
cd $TMPDIR || exit 1
wget -4 -N -nd --progress=dot:giga "$LATEST_LINK"
if [ $? -ne 0 ]; then
	printf 'ERROR: download failed.\n'
	cd && rm -rf "$TMPDIR"
	exit
fi

# install
printf 'Installing to /usr/local/bin/ ...\n'
FILENAME="${LATEST_LINK##*/}"
tar xJf "$FILENAME" || exit 1
INFER_DIR="$(find -maxdepth 1 -type d -iname 'infer*' -printf '%f' -quit)"
if [ ! -d "$INFER_DIR" ]; then
	printf 'ERROR: path for infer not found.\n'
	exit 1
fi
rm -rf /opt/infer* /usr/local/bin/infer* /usr/local/share/man/man1/infer*
mv -f -t /opt/ "$INFER_DIR"
ln -vsf -t /usr/local/bin/ /opt/"$INFER_DIR"/bin/infer*
mv -vf -t /usr/local/share/man/man1/ /opt/"$INFER_DIR"/share/man/man1/*

# cleanup
cd && rm -rf "$TMPDIR"

printf '\nDONE\n'
