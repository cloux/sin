#!/bin/sh
# eksctl - CLI tool for creating clusters on Amazon EKS managed Kubernetes service
#
# (cloux@rote.ch)

printf 'Install eksctl\n\n'

if [ $(id -u) -ne 0 ]; then printf 'Need to be root!\n'; exit 1; fi

# check dependencies
for DEP in wget jq; do
	if ! command -v "$DEP" >/dev/null; then
		printf 'ERROR: Please install "%s" to continue.\n' "$DEP"
		exit 1
	fi
done

# check versions
if [ "$(command -v eksctl)" ]; then
	INST_VERSION=$(eksctl version | grep -o 'GitTag:[^,]*' | grep -o '[0-9][0-9.]*')
	printf 'Installed version: %s\n' "$INST_VERSION" 
fi
printf '   Latest version: '
JSON_FILE=$(mktemp)
LATEST_STABLE_LINK="https://api.github.com/repos/weaveworks/eksctl/releases/latest"
wget -q "$LATEST_STABLE_LINK" -O "$JSON_FILE" 2>/dev/null
LATEST_VERSION=$(jq -r '.name' "$JSON_FILE" | grep -o '[0-9.]*')
LATEST_LINK=$(jq -r '.assets[].browser_download_url' "$JSON_FILE" | grep -i $(uname -s))
rm "$JSON_FILE"
if [ -z "$LATEST_VERSION" ]; then
	printf 'ERROR: latest version check failed.\n'
	exit
fi
printf '%s\n\n' "$LATEST_VERSION"
if [ "$INST_VERSION" ] && [ "$LATEST_VERSION" = "$INST_VERSION" ]; then
	printf 'Up to date, nothing to do.\n'
	exit
fi

# download
cd /tmp || exit 1
wget -4 -N -nd --progress=dot:giga "$LATEST_LINK"
if [ $? -ne 0 ]; then
	printf 'ERROR: download failed.\n'
	exit
fi
FILENAME=$(printf '%s' "$LATEST_LINK" | grep -o '[^/]*$')

# install
printf 'Installing to /usr/local/bin/ ...\n'
tar xzf $FILENAME
rm -f $FILENAME
mv -f -t /usr/local/bin/ eksctl || exit 1

# shell completions
[ -d /usr/share/bash-completion/completions ] &&
	eksctl completion bash 2>/dev/null > /usr/share/bash-completion/completions/eksctl
[ -d /usr/share/zsh/site-functions ] &&
	eksctl completion zsh 2>/dev/null > /usr/share/zsh/site-functions/_eksctl

printf '\nDONE\n'
