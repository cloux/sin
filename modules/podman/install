#!/bin/sh
# Podman - Docker replacement from RedHat
#
# (cloux@rote.ch)

printf 'Install podman\n\n'

if [ $(id -u) -ne 0 ]; then printf 'Need to be root!\n'; exit 1; fi

# check versions
if [ "$(command -v podman)" ]; then
	INST_VERSION=$(podman -v 2>/dev/null | grep version | grep -o '[^ ]*$')
	printf 'Installed version: %s\n' "$INST_VERSION" 
fi
printf '   Latest version: '
JSON_FILE=$(mktemp)
LATEST_STABLE_LINK="https://api.github.com/repos/containers/libpod/releases/latest"
wget -q "$LATEST_STABLE_LINK" -O "$JSON_FILE" 2>/dev/null
LATEST_VERSION=$(jq -r '.name' "$JSON_FILE" | grep -o '[^a-z]*')
LATEST_LINK=$(jq -r '.tarball_url' "$JSON_FILE")
rm "$JSON_FILE"
if [ -z "$LATEST_VERSION" ]; then
	printf "ERROR: latest version check failed.\n"
	exit
fi
printf '%s\n\n' "$LATEST_VERSION"
if [ "$INST_VERSION" ] && [ "$LATEST_VERSION" = "$INST_VERSION" ]; then
	printf 'Up to date, nothing to do.\n'
	exit
fi

# download source
printf 'Download source code ...\n\n'
cd /usr/src
LATEST_FILE="podman-v${LATEST_VERSION}.tar.gz"
wget -4 -nd -nc --progress=dot:giga $LATEST_LINK -O "$LATEST_FILE" || exit 1
[ -s "$LATEST_FILE" ] || exit 1
printf 'Unpacking %s ...\n' "$LATEST_FILE"
tar xzf "$LATEST_FILE" || exit 1
rm -f "$LATEST_FILE"
POD_SRCDIR=$(find -maxdepth 1 -type d -iname '*podman*' -printf '%f' -quit)
[ "$POD_SRCDIR" ] || exit 1
cd "$POD_SRCDIR" || exit 1

# install dependencies on first setup
if [ -z "$(command -v podman)" ]; then
	printf '\nInstall dependencies ...\n'
	export DEBIAN_FRONTEND=noninteractive
	apt-get -f --assume-yes -o Dpkg::Use-Pty=0 install \
		build-essential git golang-go go-md2man iptables libassuan-dev libc6-dev \
		libdevmapper-dev libglib2.0-dev libgpgme-dev libgpg-error-dev \
		libseccomp-dev libapparmor-dev pkg-config crun runc || exit 1
fi

# install
BTAGS="seccomp exclude_graphdriver_devicemapper"
BTAGS="$BTAGS $(hack/apparmor_tag.sh 2>/dev/null)"
BTAGS="$BTAGS $(hack/btrfs_installed_tag.sh 2>/dev/null)"
BTAGS="$BTAGS $(hack/selinux_tag.sh 2>/dev/null)"
BTAGS="$BTAGS $(hack/systemd_tag.sh 2>/dev/null)"
make BUILDTAGS="$BTAGS" -j $(nproc)
make install PREFIX=/usr || exit 1
make install.completions PREFIX=/usr
[ -f /usr/share/zsh/site-functions/_podman ] &&
  mv -f /usr/share/zsh/site-functions/_podman /usr/share/zsh/vendor-completions/_podman

# add default config
mkdir -p /etc/containers
cp -n -t /etc/containers/ ./libpod.conf ./seccomp.json 2>/dev/null
[ ! -f /etc/containers/registries.conf ] && wget -4 -nd -nc --progress=dot:giga \
  https://raw.githubusercontent.com/projectatomic/registries/master/registries.fedora \
  -O /etc/containers/registries.conf
[ ! -f /etc/containers/policy.json ] && wget -4 -nd -nc --progress=dot:giga \
  https://raw.githubusercontent.com/containers/skopeo/master/default-policy.json \
  -O /etc/containers/policy.json

# cleanup
printf 'Remove source /usr/src/%s\n\n' "$POD_SRCDIR"
cd /usr/src
rm -rf "/usr/src/$POD_SRCDIR"

# install conmon
MODULE_PATH=$(realpath "${0%/*}" 2>/dev/null)
"${MODULE_PATH}/conmon"

printf 'DONE\n'
