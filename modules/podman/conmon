#!/bin/sh
# Conmon - An OCI container runtime monitor
#
# (cloux@rote.ch)

printf 'Install conmon\n'

if [ $(id -u) -ne 0 ]; then printf 'Need to be root!\n'; exit 1; fi

# check versions
if [ "$(command -v conmon)" ]; then
	INST_VERSION=$(conmon --version 2>/dev/null | grep version | grep -o '[^ ]*$')
	printf 'Installed version: %s\n' "$INST_VERSION" 
fi
printf '   Latest version: '
JSON_FILE=$(mktemp)
LATEST_STABLE_LINK="https://api.github.com/repos/containers/conmon/releases/latest"
wget -q "$LATEST_STABLE_LINK" -O "$JSON_FILE" 2>/dev/null
LATEST_VERSION=$(jq -r '.name' "$JSON_FILE" | grep -o '[^a-z]*')
LATEST_LINK=$(jq -r '.tarball_url' "$JSON_FILE")
rm "$JSON_FILE"
if [ -z "$LATEST_VERSION" ]; then
	printf "ERROR: latest version check failed.\n"
	exit
fi
printf '%s\n' "$LATEST_VERSION"
if [ "$INST_VERSION" ] && [ "$LATEST_VERSION" = "$INST_VERSION" ]; then
	printf 'conmon is up to date.\n'
	exit
fi

# download source
printf 'Download source code ...\n\n'
cd /usr/src
LATEST_FILE="conmon-v${LATEST_VERSION}.tar.gz"
wget -4 -r -nd -nc --progress=dot:giga $LATEST_LINK -O "$LATEST_FILE" || exit 1
[ -s "$LATEST_FILE" ] || exit 1
printf 'Unpacking %s ...\n' "$LATEST_FILE"
tar xzf "$LATEST_FILE" || exit 1
rm -f "$LATEST_FILE"
SRCDIR=$(find -maxdepth 1 -type d -iname '*conmon*' -printf '%f' -quit)
[ "$SRCDIR" ] || exit 1
cd "$SRCDIR" || exit 1

# install dependencies on first setup
if [ -z "$(command -v conmon)" ]; then
	printf '\nInstall dependencies ...\n'
	export DEBIAN_FRONTEND=noninteractive
	apt-get -f --assume-yes -o Dpkg::Use-Pty=0 install \
	  gcc git libc6-dev libglib2.0-dev pkg-config make runc || exit 1
fi

# install
make -j $(nproc)
make install PREFIX=/usr || exit 1

# cleanup
printf 'Remove source /usr/src/%s\n' "$SRCDIR"
rm -rf "/usr/src/$SRCDIR"
