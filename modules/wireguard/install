#!/bin/sh
#
# Install WireGuard - Secure VPN Tunnel
# Kernel module for Linux 3.10 - 5.5
#
# https://www.wireguard.com
#
# (cloux@rote.ch)

# need to be root
if [ $(id -u) -ne 0 ]; then printf 'Need to be root!\n'; exit 1; fi

#
# install wireguard kernel module
#
printf 'Install wireguard ...\n'
cd /usr/src || exit 1
LINUX_VERSION="$(uname -r)"
VER_MAJ=${LINUX_VERSION%%.*}
VER_MIN=${LINUX_VERSION#*.}
VER_MIN=${VER_MIN%%.*}
# install Wireguard linux module only for kernel <= 5.5
if [ $VER_MAJ -lt 5 ] || ([ $VER_MAJ -eq 5 ] && [ $VER_MIN -le 5 ]); then
	if [ -d wireguard ]; then
		# NOTE: do not pull, this repository introduces conflicts on a regular basis
		rm -rf wireguard
	else
		# install dependencies
		export DEBIAN_FRONTEND=noninteractive
		apt-get --assume-yes -o Dpkg::Use-Pty=0 install git libmnl-dev libelf-dev \
			build-essential pkg-config || exit 1
	fi
	# clone repo
	git clone --depth 1 https://git.zx2c4.com/wireguard-linux-compat wireguard || exit 1
	cd wireguard/src || exit 1
	# compile & install
	export LC_ALL=C
	export LANG=C
	make -j $(nproc) || exit 1
	make install || exit 1
	make clean >/dev/null
	# load module
	modprobe wireguard
else
	printf 'This is kernel %s.%s, wireguard module is included.\n\n' "$VER_MAJ" "$VER_MIN"
	[ -d wireguard ] && rm -rf wireguard
fi

#
# install wireguard-tools
#
printf 'Install wireguard-tools ...\n'
if [ -d wireguard-tools ]; then
	cd wireguard-tools
	git fetch -q --all || exit 1
	if [ "$(git rev-parse HEAD)" = "$(git rev-parse @{u})" ]; then
		printf 'Source is up to date.\n'
	else
		git pull -q || exit 1
	fi
else
	# clone repo
	git clone -q https://git.zx2c4.com/wireguard-tools || exit 1
	cd wireguard-tools
fi
cd src || exit 1
make -j $(nproc) || exit 1
make install || exit 1
make clean >/dev/null

printf '\nDONE\n'
